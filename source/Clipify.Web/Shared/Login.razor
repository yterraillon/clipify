@using MediatR
@using System.Threading
@using Application.Authentication.Requests.Authorization
@using Clipify.Application.Users
@using Clipify.Domain.Entities

@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IMediator Mediator
@inject ICurrentUserService CurrentUserService

@if (CurrentUserService.IsUserLoggedIn())
{
    <div class="flex flex-row items-center align-baseline rounded-full">
        @*<img class="rounded-full h-8 w-8 flex" src="@_currentUser.Avatar" alt="User Avatar" />*@
        @_currentUser.Username
    </div>
}
else
{
    <button @onclick="@(LoginAsync)">
        Login
    </button>
}
@code {

    private User _currentUser = User.Empty;

    protected override Task OnInitializedAsync()
    {
        _currentUser = CurrentUserService.GetCurrentUser();

        return base.OnInitializedAsync();
    }

    private async Task LoginAsync()
    {
        var response = await Mediator.Send(new GetSpotifyAuthenticationUri.Request(string.Empty, string.Empty));

        if (string.IsNullOrEmpty(response.Url))
            NavigationManager.NavigateTo("/");
        else
            await JsRuntime.InvokeAsync<string>("open", new CancellationToken(), new object?[]
            {
                response.Url, "_blank"
            });
    }
}
