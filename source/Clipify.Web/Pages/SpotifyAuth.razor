@page "/spotify-auth"

@using Microsoft.AspNetCore.WebUtilities
@using MediatR
@using Clipify.Application.Spotify.Requests
@using Clipify.Application.Common.Models
@inject NavigationManager NavigationManager
@inject IMediator Mediator

<h3>SpotifyAuth</h3>

<div class="container">
    @if (!string.IsNullOrEmpty(Code))
    {
        <p>Code: @Code</p>
    }
    else
    {
        <p>Error: @Error</p>
    }
    
    @if (Response != null)
    {
        <p>Access Token: @Response.AccessToken</p>
    }
</div>

@code {

    private string Code { get; set; } = String.Empty;

    private string Error { get; set; } = String.Empty;

    private string State { get; set; } = String.Empty;

    private SpotifyAuthResponse? Response { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var code))
        {
            Code = code;
        }
        else if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("state", out var error))
        {
            Error = error;
        }

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("state", out var state))
        {
            State = state;
        }

        if (!string.IsNullOrEmpty(Code))
        {
            Response = await Mediator.Send(new SpotifyAccessTokenRequest.Request
            {
                Code = Code
            }).ConfigureAwait(false);
        }
    }

}
