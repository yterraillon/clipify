@page "/playlists"
@using MediatR
@using Clipify.Application.Playlists.Models
@using Clipify.Application.Playlists.Requests.GetPlaylists
@using Clipify.Application.Playlists.Commands.SavePlaylist

@inject IMediator _mediator

<div class="container m-auto flex flex-wrap justify-center">
    @foreach (var playlist in _playlists)
    {
        <div class="max-w-xs m-3 rounded-md overflow-hidden shadow-lg">
            @if (playlist.Images.Any())
            {
                <img class="w-full" src="@playlist.Images.FirstOrDefault()?.Url" alt="Cover">
            }
            else
            {
                <img class="w-full" src="https://via.placeholder.com/384" alt="Cover"/>
            }
            <div class="space-y-2 p-4">
                <div class="font-semibold text-gray-800 text-lg text-center truncate" title="@playlist.Name">@playlist.Name</div>
                @if (string.IsNullOrEmpty(playlist.Description))
                {
                    <p class="text-sm text-gray-500 max-h-full h-16 overflow-ellipsis overflow-hidden">No description.</p>
                }
                else
                {
                    <p class="text-sm text-gray-500 max-h-full h-16 overflow-ellipsis overflow-hidden" title="@((MarkupString)playlist.Description)">@((MarkupString)playlist.Description)</p>
                }
            </div>
            <div class="flex justify-center space-x-2 items-center py-3 bg-gray-200">
                <button type="button" class="px-4 py-2 uppercase text-white text-sm rounded-3xl shadow-md bg-green-500 border border-green-500 transition-all duration-150 hover:bg-green-600 hover:border-green-600"
                        @onclick="@(() => SavePlaylistAsync(playlist))">
                    Save
                </button>
                <NavLink href="@("Playlist/" + playlist.Id)" class="px-4 py-2 uppercase text-gray-700 text-sm rounded-3xl border border-green-500 transition-all duration-150 hover:bg-green-500 hover:text-white">
                    Details
                </NavLink>
            </div>
        </div>
    }
</div>

@code
{
    private IEnumerable<PlaylistViewModel> _playlists = Enumerable.Empty<PlaylistViewModel>();

    protected override async Task OnInitializedAsync()
    {
        _playlists = await _mediator.Send(new GetPlaylists.Request());
    }

    private Task SavePlaylistAsync(PlaylistViewModel playlist)
        => _mediator.Send(new SavePlaylist.Command
        {
            PlaylistId = playlist.Id,
            SnapshotId = playlist.SnapshotId,
            Title = playlist.Name
        });
}
